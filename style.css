*{ /* '*' é usado como medida universal do programa ou da box  */
    margin: 0; 
    padding: 0; /* assim é zerado as medidas padrões do navegador */
    box-sizing: border-box; /* é usado para manter o valor dos tamanhos de width e height mesmo que seja usado o padding*/
}

:root{
    --text-color: white;
    --background: url(./Assets/bg-mobile.jpg);
    --stroke-color: rgba(255,255,255,0.5);
    --surface-color: rgba(255, 255, 255, 0.05);
    --surface-color-hover: rgba(0,0,0,0.02);
    --highlight-color: rgba(255,255,255,0.2);
    --switch-bg-url: url(./Assets/MoonStars.svg);

}

.light{
    --text-color:black;
    --background: url(./Assets/bg-mobile-light.jpg);
    --stroke-color: rgba(0,0,0,0.5);
    --surface-color: rgba(0,0,0,0.05);
    --surface-color-hover: rgba(0,0,0,0.02);
    --highlight-color: rgba(0,0,0,0.1);
    --switch-bg-url: url(./Assets/Sun.svg);

}

body{
    /*
    background-image: url(./Assets/bg-mobile.jpg);
    background-repeat: no-repeat;
    background-position: top center;
    background-size: cover;
    
    Tudo isso pode ser resumido em apenas uma linha
    background: image, repeat, position, size -> a diferença que o size deve ser usado juntamente com a barra "/"

    */
    
    background: var(--background) no-repeat top center /cover;
}

body *{
    font-family: "Inter", sans-serif;
    color: var(--text-color);
}

#container{
    width: 360px;
   /* border: 1px solid red;*/
    margin: 56px auto 0px; /* margin auto não centraliza topo e de baixo da box, ou seja apenas na esquerda e direita */
    padding: 0 24px

}

/* profile*/

#profile {
    text-align: center; /* Como img é inline, ele pode ser centralizado pelo text align*/
    padding: 24px;
}

#profile img {
    width: 112px;
    margin: auto; /* margin auto não coloca a imagem no centro, no caso img é um documento in line que não funciona com margin*/
    display: inline; /* display block server para ocupar a linha completa da tela, enquanto in line é usado na mesma linha do conteúdo anterior*/
}

#profile p{
    font-weight: 500;
    line-height: 24px;
    margin-top: 8px;
}

/* button*/

#switch {
    position: relative;
    width: 64px;

    margin: 0 auto;
    
}

#switch button { 
    height: 32px;
    width: 32px;
    border-radius: 50%;
    background: white var(--switch-bg-url) no-repeat center;
    border: 0;

    position: absolute;
    left: 0;
    transform: translateY(-50%);
    top: 50%;
    z-index: 1;
}

.light #switch button {
    left: initial;
    right: 0;
}

#switch span {
    display: block;
    width: 64px;
    height: 24px;
    background: var(--surface-color);
    border: 1px solid var(--stroke-color);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    border-radius: 9999px;
}

/* links */

ul {
    list-style: none;
    display: flex;
    flex-direction: column;
    gap: 16px;

    padding: 24px;
}

ul li a{
    display: flex;
    justify-content: center;

    padding: 16px 24px;
    background: var(--surface-color);
    border: 1px solid var(--stroke-color);
    border-radius: 8px;

    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);

    text-decoration: none;
    font-weight: 500px;
    

    
    transition: background 0.2s; /*primeira propriedade é qual queremos mexer (pode ser all), a segunda é o tempo  */
}

/* pseudo-selector */

ul li a:hover{
    background-color: var(--surface-color-hover);
    border: 1.5px solid var(--text-color);
}

#social-links{
    display: flex;
    justify-content: center;

    padding: 24px 0;

    font-size: 24px;
}

#social-links a{
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 16px;
    border-radius: 50%;

    transition: background 0.2s;
}

#social-links a:hover{
    background: var(--highlight-color);
}

footer{
    text-align: center;
    padding:24px 0;
    font-size: 14px;
}